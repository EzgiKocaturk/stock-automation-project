/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package stok_takip;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fah
 */
public class urun_ekle extends javax.swing.JFrame {

    /** Creates new form urun_ekle */
    
    private void Guncelle(){
    
     try {
            String baslik[] = new String[]{"id","Kategori","Alıcı", "Ürün Adı", "Ürün Kodu", "Renk", "Fiyat", "Adet", "Açıklama" };  
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = null;
            Statement st = null;
            ResultSet rs = null;

            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");
            
            st = con.createStatement();                
            rs = st.executeQuery("select * from urunler");
            rs.last();
           
            int kayitsayisi = rs.getRow();
            rs.beforeFirst();

            Object data[][] = new Object[kayitsayisi][];
            int i = 0;

            while (rs.next()) {

                data[i] = new Object[]{  
                    
                    rs.getString("id"), 
                    rs.getString("kategori"),
                    rs.getString("alici"),
                    rs.getString("urunadi"),
                    rs.getString("urunkodu"),
                    rs.getString("renk"),  
                    rs.getString("fiyat"),
                    rs.getString("adet"),
                    rs.getString("aciklama"), 
                };
                i++;
            }
           
            con.close();
            table_urunler.setModel(new DefaultTableModel(data, baslik));
            
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
    }
    
    
    public void kategori(){
        
        try {

                Class.forName("com.mysql.jdbc.Driver");

                Connection con = null;
                Statement st = null;
                ResultSet rs = null;

                con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");
                st = con.createStatement();

                rs = st.executeQuery("select * from urunler");

                while(rs.next()){

                    c_kategori.addItem(rs.getString("kategori"));

                }
            

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }

        
    }
    
    public urun_ekle() {
        initComponents();
        
        Guncelle();
        
        
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_fiyat = new javax.swing.JTextField();
        txt_renk = new javax.swing.JTextField();
        lbl_fiyat = new javax.swing.JLabel();
        txt_urunkodu = new javax.swing.JTextField();
        txt_adet = new javax.swing.JTextField();
        txt_guncelle1 = new javax.swing.JButton();
        lbl_fiyat1 = new javax.swing.JLabel();
        txt_aciklama = new javax.swing.JTextField();
        lbl_fiyat2 = new javax.swing.JLabel();
        lbl_filtrele = new javax.swing.JLabel();
        txt_ara = new javax.swing.JTextField();
        btn_ara = new javax.swing.JButton();
        lbl_adi = new javax.swing.JLabel();
        lbl_kategori = new javax.swing.JLabel();
        lbl_renk1 = new javax.swing.JLabel();
        lbl_renk = new javax.swing.JLabel();
        txt_sil = new javax.swing.JButton();
        txt_guncelle = new javax.swing.JButton();
        btn_ekle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_urunler = new javax.swing.JTable();
        txt_adi = new javax.swing.JTextField();
        btn_cikis = new javax.swing.JButton();
        btn_satislar_form = new javax.swing.JButton();
        c_kategori = new javax.swing.JComboBox<>();
        lbl_kategori2 = new javax.swing.JLabel();
        txt_alici = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1040, 670));
        setMinimumSize(new java.awt.Dimension(1040, 670));
        setPreferredSize(new java.awt.Dimension(1040, 670));
        getContentPane().setLayout(null);
        getContentPane().add(txt_fiyat);
        txt_fiyat.setBounds(190, 270, 170, 30);
        getContentPane().add(txt_renk);
        txt_renk.setBounds(190, 220, 170, 30);

        lbl_fiyat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_fiyat.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fiyat.setText("PRICE");
        getContentPane().add(lbl_fiyat);
        lbl_fiyat.setBounds(40, 280, 51, 20);
        getContentPane().add(txt_urunkodu);
        txt_urunkodu.setBounds(190, 170, 170, 30);
        getContentPane().add(txt_adet);
        txt_adet.setBounds(190, 320, 170, 30);

        txt_guncelle1.setText("MAKE SALES");
        txt_guncelle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_guncelle1ActionPerformed(evt);
            }
        });
        getContentPane().add(txt_guncelle1);
        txt_guncelle1.setBounds(180, 440, 105, 25);

        lbl_fiyat1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_fiyat1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fiyat1.setText("NUMBER(ADD)");
        getContentPane().add(lbl_fiyat1);
        lbl_fiyat1.setBounds(40, 330, 121, 20);
        getContentPane().add(txt_aciklama);
        txt_aciklama.setBounds(190, 370, 170, 30);

        lbl_fiyat2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_fiyat2.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fiyat2.setText("EXPLANATION");
        getContentPane().add(lbl_fiyat2);
        lbl_fiyat2.setBounds(40, 380, 119, 20);

        lbl_filtrele.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_filtrele.setForeground(new java.awt.Color(255, 255, 255));
        lbl_filtrele.setText("FILTER");
        getContentPane().add(lbl_filtrele);
        lbl_filtrele.setBounds(520, 70, 58, 20);
        getContentPane().add(txt_ara);
        txt_ara.setBounds(600, 60, 170, 40);

        btn_ara.setText("SEARCH");
        btn_ara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_araActionPerformed(evt);
            }
        });
        getContentPane().add(btn_ara);
        btn_ara.setBounds(790, 70, 80, 25);

        lbl_adi.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_adi.setForeground(new java.awt.Color(255, 255, 255));
        lbl_adi.setText("PRODUCT NAME");
        getContentPane().add(lbl_adi);
        lbl_adi.setBounds(40, 140, 134, 20);

        lbl_kategori.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_kategori.setForeground(new java.awt.Color(255, 255, 255));
        lbl_kategori.setText("CATEGORIES");
        getContentPane().add(lbl_kategori);
        lbl_kategori.setBounds(40, 40, 107, 20);

        lbl_renk1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_renk1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_renk1.setText("PRODUCT CODE");
        getContentPane().add(lbl_renk1);
        lbl_renk1.setBounds(40, 180, 131, 20);

        lbl_renk.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_renk.setForeground(new java.awt.Color(255, 255, 255));
        lbl_renk.setText("COLOR");
        getContentPane().add(lbl_renk);
        lbl_renk.setBounds(40, 230, 56, 20);

        txt_sil.setText("DELETE");
        txt_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_silActionPerformed(evt);
            }
        });
        getContentPane().add(txt_sil);
        txt_sil.setBounds(40, 500, 83, 25);

        txt_guncelle.setText("UPDATE");
        txt_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_guncelleActionPerformed(evt);
            }
        });
        getContentPane().add(txt_guncelle);
        txt_guncelle.setBounds(40, 460, 83, 25);

        btn_ekle.setText("ADD PRODUCT");
        btn_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ekleActionPerformed(evt);
            }
        });
        getContentPane().add(btn_ekle);
        btn_ekle.setBounds(40, 420, 120, 25);

        table_urunler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_urunler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_urunlerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_urunler);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(480, 110, 509, 402);
        getContentPane().add(txt_adi);
        txt_adi.setBounds(190, 130, 170, 30);

        btn_cikis.setText("LOGOUT");
        btn_cikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cikisActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cikis);
        btn_cikis.setBounds(910, 70, 81, 25);

        btn_satislar_form.setText("SHOW SALES");
        btn_satislar_form.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_satislar_formActionPerformed(evt);
            }
        });
        getContentPane().add(btn_satislar_form);
        btn_satislar_form.setBounds(160, 480, 117, 25);

        c_kategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Atölye", "Moda", "Elektronik", "Kozmetik", "Kişisel Bakım", "Bebek", "Ev", "Bahçe", "Ofis", "Spor", "Sanat", "Otomobil", "Motosiklet", "Süpermarket", "Giyim" }));
        c_kategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_kategoriActionPerformed(evt);
            }
        });
        getContentPane().add(c_kategori);
        c_kategori.setBounds(190, 40, 170, 22);

        lbl_kategori2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_kategori2.setForeground(new java.awt.Color(255, 255, 255));
        lbl_kategori2.setText("RECEIVERS");
        getContentPane().add(lbl_kategori2);
        lbl_kategori2.setBounds(40, 90, 100, 20);
        getContentPane().add(txt_alici);
        txt_alici.setBounds(190, 80, 170, 32);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resimler/bg.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(1040, 670));
        jLabel1.setMinimumSize(new java.awt.Dimension(1040, 670));
        jLabel1.setPreferredSize(new java.awt.Dimension(1040, 670));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(4, 4, 1040, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_araActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_araActionPerformed

        String ara =txt_ara.getText();
        String baslik[] = new String[]{"id","Kategori","Alıcı", "Ürün Adı", "Ürün Kodu", "Renk", "Fiyat", "Adet", "Açıklama" };

        try {

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = null;
            Statement st = null;
            ResultSet rs = null;

            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");

            String sorgu ="select * from urunler where urunadi like '%"+txt_ara.getText()+"%' or"
            +" kategori like '%"+txt_ara.getText()+"%' or"
            +" urunkodu like '%"+txt_ara.getText()+"%' or"
            +" alici like '%"+txt_ara.getText()+"%' ";

            st = con.createStatement();
            rs = st.executeQuery(sorgu);

            rs.last();

            int say = rs.getRow();
            rs.beforeFirst();

            String sayi = null;
            sayi = String.valueOf(rs.getRow());

            if(say < 1){
                JOptionPane.showMessageDialog(null, "Aradığınız Ürün Bulunamadı!");
            }
            else{

                Object data[][] = new Object[say][];
                int i = 0;

                while (rs.next()) {

                    data[i] = new Object[]{

                        rs.getString("kategori"),
                        rs.getString("alici"),
                        rs.getString("urunadi"),
                        rs.getString("urunkodu"),
                        rs.getString("renk"),
                        rs.getString("fiyat"),
                        rs.getString("adet"),
                        rs.getString("aciklama"),
                    };
                    i++;
                }
                table_urunler.setModel(new DefaultTableModel(data, baslik));
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }

    }//GEN-LAST:event_btn_araActionPerformed

    private void txt_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_silActionPerformed

        try {

            int row = table_urunler.getSelectedRow();
            String secim=(table_urunler.getValueAt(row, 0).toString());
           

            Class.forName("com.mysql.jdbc.Driver");

            Connection con = null;
            Statement st = null;
            ResultSet rs = null;

            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");

            String sorgu = "delete from urunler where id='"+secim+"'";

            st = con.createStatement();
            st.executeUpdate(sorgu);

            JOptionPane.showMessageDialog(null, "Ürün Başarıyla Silinmiştir");

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }

        Guncelle();

    }//GEN-LAST:event_txt_silActionPerformed

    private void txt_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_guncelleActionPerformed

        try {

            
            String kategori = String.valueOf(c_kategori.getSelectedItem());
            int row = table_urunler.getSelectedRow();
            String secim=(table_urunler.getValueAt(row, 0).toString());
           
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = null;
            Statement st = null;
            ResultSet rs = null;

            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");
            
            String sorgu = "UPDATE urunler SET kategori='"+kategori+"'"
            +",alici='"+txt_alici.getText()+"'"
            +",urunadi='"+txt_adi.getText()+"'"
            +",urunkodu='"+txt_urunkodu.getText()+"'"
            +",renk='"+txt_renk.getText()+"'"
            +",fiyat='"+txt_fiyat.getText()+"'"
            +",adet='"+txt_adet.getText()+"'"
            +",aciklama='"+txt_aciklama.getText()+"' where id='"+secim+"'";

            st = con.createStatement();
            st.executeUpdate(sorgu);

            JOptionPane.showMessageDialog(null, "Ürün Güncellemesi Tamamlanmıştır.");

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }

        Guncelle();

    }//GEN-LAST:event_txt_guncelleActionPerformed

    private void btn_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ekleActionPerformed

        String kategori = String.valueOf(c_kategori.getSelectedItem());
        String alici=txt_alici.getText();
        String adi=txt_adi.getText();
        String beden=txt_urunkodu.getText();
        String renk=txt_renk.getText();
        String fiyat=txt_fiyat.getText();
        String adet=txt_adet.getText();
        String aciklama=txt_aciklama.getText();

        try {

            if (kategori.equals("") || adi.equals("") || alici.equals("") || renk.equals("") || fiyat.equals("")) {

                JOptionPane.showMessageDialog(this, "Lütfen Boş Alanları Doldurunuz!");

            } else {
                Class.forName("com.mysql.jdbc.Driver");

                Connection con = null;
                Statement st = null;
                ResultSet rs = null;

                con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");
                st = con.createStatement();

                String sql = "INSERT INTO urunler (kategori,urunadi,alici,urunkodu,renk,fiyat,adet,aciklama)"
                + " VALUES ('"+kategori+"', '"+adi+"', '"+alici+"', '"+beden+"', '"+renk+"', '"+fiyat+"', '"+adet+"', '"+aciklama+"')";

                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, adi + "  adlı ürün eklenmiştir.");
                Guncelle();

            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }

    }//GEN-LAST:event_btn_ekleActionPerformed

    private void table_urunlerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_urunlerMouseClicked

        Connection con = null;
        Statement st = null;
        ResultSet rs = null;
        PreparedStatement st1 =null;

        try {

            int row = table_urunler.getSelectedRow();
            
            String secim_yap=(table_urunler.getValueAt(row, 0).toString());

            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");

            String sorgu = "select * from urunler where id='"+secim_yap+"'";
            //st = con.createStatement();
            st = con.createStatement();
            rs = st.executeQuery(sorgu);

            if(rs.last()){

                
                txt_alici.setText(rs.getString("alici"));
                txt_adi.setText(rs.getString("urunadi"));
                txt_urunkodu.setText(rs.getString("urunkodu"));
                txt_renk.setText(rs.getString("renk"));
                txt_fiyat.setText(rs.getString("fiyat"));
                txt_adet.setText(rs.getString("adet"));
                txt_aciklama.setText(rs.getString("aciklama"));
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
    }//GEN-LAST:event_table_urunlerMouseClicked

    private void btn_cikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cikisActionPerformed

        urun_ekle a = new urun_ekle();
        a.setVisible(false);
        dispose();

    }//GEN-LAST:event_btn_cikisActionPerformed

    private void txt_guncelle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_guncelle1ActionPerformed
        
       try {
            String kategori = String.valueOf(c_kategori.getSelectedItem());
            
            int row = table_urunler.getSelectedRow();            
            int secim_yap=Integer.parseInt((table_urunler.getValueAt(row, 0)).toString());
             
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = null;
            Statement st = null;
            ResultSet rs = null;

            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");
            st = con.createStatement();
            
            rs = st.executeQuery("select * from urunler where id='"+secim_yap+"'");
            rs.next();
            
            int eski_adet=Integer.parseInt(rs.getString("adet"));            
            int satilan_adet = Integer.parseInt(txt_adet.getText());
            int kalan = eski_adet - satilan_adet;
            
            String sorgu1 = "UPDATE urunler SET kategori='"+kategori+"'"
            +",urunadi='"+txt_adi.getText()+"'"
            +",alici='"+txt_alici.getText()+"'"
            +",urunkodu='"+txt_urunkodu.getText()+"'"
            +",renk='"+txt_renk.getText()+"'"
            +",fiyat='"+txt_fiyat.getText()+"'"
            +",adet='"+kalan+"'"
            +",aciklama='"+txt_aciklama.getText()+"' where id='"+secim_yap+"'";
            
            
            int fiyat = Integer.parseInt(txt_fiyat.getText());
            int Toplam_fiyat =fiyat;
            
            String sorgu = "INSERT INTO satislar (kategori,urunadi,alici,urunkodu,renk,fiyat,adet,aciklama)" 
                        + " VALUES ('"+kategori+"', '"+txt_adi.getText()+"', '"+txt_alici.getText()+"', '"+txt_urunkodu.getText()+"'"
                        +", '"+txt_renk.getText()+"', '"+Toplam_fiyat+"', '"+txt_adet.getText()+"'"
                        +", '"+txt_aciklama.getText()+"')";
            
            
            
            st.executeUpdate(sorgu);
            st.executeUpdate(sorgu1);

            JOptionPane.showMessageDialog(null, txt_adi.getText() + " adlı ürün satılmışır.");

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }
         
        
        Guncelle();
        
    }//GEN-LAST:event_txt_guncelle1ActionPerformed

    private void btn_satislar_formActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_satislar_formActionPerformed
        
        satislar ac = new satislar();
        ac.setVisible(true);
        
    }//GEN-LAST:event_btn_satislar_formActionPerformed

    private void c_kategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_kategoriActionPerformed

        try {

            String kategori = String.valueOf(c_kategori.getSelectedItem());

            Class.forName("com.mysql.jdbc.Driver");

            Connection con = null;
            Statement st = null;
            ResultSet rs = null;

            con = DriverManager.getConnection("jdbc:mysql://localhost/stok?useUnicode=true&characterEncoding=UTF-8", "root", "");
            st = con.createStatement();

            /* rs = st.executeQuery("select * from urunler where kategori='"+kategori+"'");

            if(rs.next()){

                c_alt_kategori.addItem(rs.getString("alt_kategori"));

            }

            */

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Hata: " + ex.toString());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Veritabanına bağlantı sağlanamadı! " + ex.toString());
        }

    }//GEN-LAST:event_c_kategoriActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(urun_ekle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(urun_ekle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(urun_ekle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(urun_ekle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new urun_ekle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ara;
    private javax.swing.JButton btn_cikis;
    private javax.swing.JButton btn_ekle;
    private javax.swing.JButton btn_satislar_form;
    private javax.swing.JComboBox<String> c_kategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_adi;
    private javax.swing.JLabel lbl_filtrele;
    private javax.swing.JLabel lbl_fiyat;
    private javax.swing.JLabel lbl_fiyat1;
    private javax.swing.JLabel lbl_fiyat2;
    private javax.swing.JLabel lbl_kategori;
    private javax.swing.JLabel lbl_kategori2;
    private javax.swing.JLabel lbl_renk;
    private javax.swing.JLabel lbl_renk1;
    private javax.swing.JTable table_urunler;
    private javax.swing.JTextField txt_aciklama;
    private javax.swing.JTextField txt_adet;
    private javax.swing.JTextField txt_adi;
    private javax.swing.JTextField txt_alici;
    private javax.swing.JTextField txt_ara;
    private javax.swing.JTextField txt_fiyat;
    private javax.swing.JButton txt_guncelle;
    private javax.swing.JButton txt_guncelle1;
    private javax.swing.JTextField txt_renk;
    private javax.swing.JButton txt_sil;
    private javax.swing.JTextField txt_urunkodu;
    // End of variables declaration//GEN-END:variables

}
